name: Tag image on published release
on:
  release:
    types: [published]
jobs:
  tag_image:
    name: Tag image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set env
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Read project name
        uses: KJ002/read-yaml@1.5
        id: project-name-data
        with:
          file: './k8s/templates/values.yml'
          key-path: '["projectName"]'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag as pre-release
        if: 'github.event.release.prerelease'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.project-name-data.outputs.data }}
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$NEXT_VERSION $ECR_REGISTRY/$ECR_REPOSITORY:pre-release
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:pre-release
          echo "TAG_TYPE=pre-release" >> $GITHUB_ENV
      - name: Tag as pre-release
        if: '!github.event.release.prerelease'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.project-name-data.outputs.data }}
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$NEXT_VERSION $ECR_REGISTRY/$ECR_REPOSITORY:release
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:release
          echo "TAG_TYPE=release" >> $GITHUB_ENV
      - name: Tag image success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: 'The `${{ env.NEXT_VERSION }}` for project `${{ steps.project-name-data.outputs.data }}` was successfully tagged as **${{ env.TAG_TYPE }}**'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          avatarUrl: https://cdn.discordapp.com/avatars/839863605943205949/37ee1fdc2ea3909e3e1da4d109fbfa65.webp?size=256
      - name: Tag image failed
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: 'Tag image `${{ env.NEXT_VERSION }}` for project `${{ steps.project-name-data.outputs.data }}` failed'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          avatarUrl: https://cdn.discordapp.com/avatars/839863605943205949/37ee1fdc2ea3909e3e1da4d109fbfa65.webp?size=256
      - name: Tag image cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
          severity: warn
          details: 'Tag image `${{ env.NEXT_VERSION }}` for project `${{ steps.project-name-data.outputs.data }}` cancelled'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          avatarUrl: https://cdn.discordapp.com/avatars/839863605943205949/37ee1fdc2ea3909e3e1da4d109fbfa65.webp?size=256
